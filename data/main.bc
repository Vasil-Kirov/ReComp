; ModuleID = 'main'
source_filename = "file1.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%"__main!SFloat" = type { float, float }
%slice.2 = type { i64, ptr }
%"__init!Arg" = type { i64, ptr }
%slice.3 = type { i64, ptr }

define void @"__main!__GlobalInitializerFunction"() {
block_0:
  ret void
}

define i64 @"__main!something"(<2 x float> %0) !dbg !4 {
block_0:
  %1 = alloca %"__main!SFloat", align 8, !dbg !13
  store <2 x float> %0, ptr %1, align 8, !dbg !13
  call void @llvm.dbg.value(metadata ptr %1, metadata !14, metadata !DIExpression()), !dbg !13
  %2 = load i64, ptr %1, align 8, !dbg !15
  ret i64 %2, !dbg !15
}

define i32 @"__main!sum_o"(ptr %0) !dbg !16 {
block_0:
  call void @llvm.dbg.value(metadata ptr %0, metadata !20, metadata !DIExpression()), !dbg !33
  %1 = getelementptr inbounds %slice.2, ptr %0, i32 0, i32 1, !dbg !34
  %2 = load ptr, ptr %1, align 8, !dbg !34
  %3 = getelementptr %"__init!Arg", ptr %2, i64 0, !dbg !34
  %4 = getelementptr inbounds %"__init!Arg", ptr %3, i32 0, i32 1, !dbg !34
  %5 = load ptr, ptr %4, align 8, !dbg !34
  %6 = load i32, ptr %5, align 4, !dbg !34
  ret i32 %6, !dbg !34
}

define i32 @"__main!sum"(ptr %0) !dbg !35 {
block_0:
  %1 = alloca %"__init!Arg", align 8, !dbg !36
  call void @llvm.dbg.value(metadata ptr %0, metadata !37, metadata !DIExpression()), !dbg !38
  %2 = getelementptr inbounds %slice.3, ptr %0, i32 0, i32 1, !dbg !36
  %3 = load ptr, ptr %2, align 8, !dbg !36
  %4 = getelementptr %"__init!Arg", ptr %3, i64 0, !dbg !36
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %4, i64 16, i1 false), !dbg !36
  call void @llvm.dbg.declare(metadata ptr %1, metadata !39, metadata !DIExpression()), !dbg !36
  %5 = getelementptr inbounds %"__init!Arg", ptr %1, i32 0, i32 1, !dbg !40
  %6 = load ptr, ptr %5, align 8, !dbg !40
  %7 = load i32, ptr %6, align 4, !dbg !40
  ret i32 %7, !dbg !40
}

define float @"__main!my_str"(ptr %0) !dbg !41 {
block_0:
  %1 = alloca %"__main!SFloat", align 8, !dbg !45
  %2 = alloca %"__main!SFloat", align 8, !dbg !46
  call void @llvm.dbg.value(metadata ptr %0, metadata !47, metadata !DIExpression()), !dbg !48
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %0, i64 8, i1 false), !dbg !45
  call void @llvm.dbg.declare(metadata ptr %1, metadata !49, metadata !DIExpression()), !dbg !45
  %3 = getelementptr inbounds %"__main!SFloat", ptr %1, i32 0, i32 0, !dbg !50
  store float 1.000000e+00, ptr %3, align 4, !dbg !50
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 8, i1 false), !dbg !46
  %4 = getelementptr inbounds %"__main!SFloat", ptr %2, i32 0, i32 0, !dbg !46
  %5 = load float, ptr %4, align 4, !dbg !46
  ret float %5, !dbg !46
}

define i32 @"__main!main"() !dbg !51 {
block_0:
  ret i32 241, !dbg !52
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!1 = !DIFile(filename: "file1.rcp", directory: "D:\\Programming\\ReComp")
!2 = !{i32 2, !"CodeView", i32 1}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "something", linkageName: "__main!something", scope: !1, file: !1, line: 12, type: !5, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !12)
!5 = !DISubroutineType(types: !6)
!6 = !{!7, !7}
!7 = !DICompositeType(tag: DW_TAG_structure_type, name: "__main!SFloat", scope: !1, file: !1, size: 64, elements: !8)
!8 = !{!9, !11}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1, file: !1, baseType: !10, size: 32, align: 32)
!10 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1, file: !1, baseType: !10, size: 32, align: 32, offset: 32)
!12 = !{}
!13 = !DILocation(line: 12, scope: !4)
!14 = !DILocalVariable(name: "arg", scope: !4, file: !1, line: 12, type: !7)
!15 = !DILocation(line: 13, scope: !4)
!16 = distinct !DISubprogram(name: "sum_o", linkageName: "__main!sum_o", scope: !1, file: !1, line: 16, type: !17, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !12)
!17 = !DISubroutineType(types: !18)
!18 = !{!19}
!19 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!20 = !DILocalVariable(name: "list", scope: !16, file: !1, line: 16, type: !21)
!21 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !22)
!22 = !{!23, !31}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !24, size: 64, align: 64)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__init!Arg", baseType: !25, size: 64, align: 64, dwarfAddressSpace: 0)
!25 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init!Arg", scope: !1, file: !1, size: 128, elements: !26)
!26 = !{!27, !29}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !28, size: 64, align: 64)
!28 = !DIBasicType(name: "type", size: 64, encoding: DW_ATE_unsigned)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1, file: !1, baseType: !30, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1, file: !1, baseType: !32, size: 64, align: 64, offset: 64)
!32 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!33 = !DILocation(line: 16, scope: !16)
!34 = !DILocation(line: 17, scope: !16)
!35 = distinct !DISubprogram(name: "sum", linkageName: "__main!sum", scope: !1, file: !1, line: 20, type: !17, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !12)
!36 = !DILocation(line: 21, scope: !35)
!37 = !DILocalVariable(name: "list", scope: !35, file: !1, line: 20, type: !21)
!38 = !DILocation(line: 20, scope: !35)
!39 = !DILocalVariable(name: "res", scope: !35, file: !1, line: 21, type: !25)
!40 = !DILocation(line: 22, scope: !35)
!41 = distinct !DISubprogram(name: "my_str", linkageName: "__main!my_str", scope: !1, file: !1, line: 25, type: !42, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !12)
!42 = !DISubroutineType(types: !43)
!43 = !{!10, !44}
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__main!SFloat", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!45 = !DILocation(line: 26, scope: !41)
!46 = !DILocation(line: 28, scope: !41)
!47 = !DILocalVariable(name: "f", scope: !41, file: !1, line: 25, type: !44)
!48 = !DILocation(line: 25, scope: !41)
!49 = !DILocalVariable(name: "x", scope: !41, file: !1, line: 26, type: !7)
!50 = !DILocation(line: 27, scope: !41)
!51 = distinct !DISubprogram(name: "main", linkageName: "__main!main", scope: !1, file: !1, line: 31, type: !17, spFlags: DISPFlagDefinition, unit: !0)
!52 = !DILocation(line: 36, scope: !51)
