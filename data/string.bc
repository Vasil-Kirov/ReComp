; ModuleID = 'string'
source_filename = "string.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

define void @"__string!__GlobalInitializerFunction"() {
block_0:
  ret void
}

define i8 @"__string!index"(ptr %0, i64 %1, i64 %2) !dbg !4 {
block_0:
  %3 = alloca i64, align 8, !dbg !11
  %4 = alloca i64, align 8, !dbg !12
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false), !dbg !11
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false), !dbg !12
  call void @llvm.dbg.value(metadata ptr %0, metadata !13, metadata !DIExpression()), !dbg !14
  call void @llvm.dbg.value(metadata i64 %1, metadata !15, metadata !DIExpression()), !dbg !14
  call void @llvm.dbg.value(metadata i64 %2, metadata !16, metadata !DIExpression()), !dbg !14
  %5 = icmp sge i64 %2, %1, !dbg !17
  br i1 %5, label %block_1, label %block_2, !dbg !17

block_1:                                          ; preds = %block_0
  call void @"__os!abort"(), !dbg !18
  br label %block_3, !dbg !18

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !18

block_3:                                          ; preds = %block_2, %block_1
  store i64 0, ptr %3, align 8, !dbg !11
  call void @llvm.dbg.declare(metadata ptr %3, metadata !19, metadata !DIExpression()), !dbg !11
  store i64 0, ptr %4, align 8, !dbg !12
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21, metadata !DIExpression()), !dbg !12
  ret i8 0, !dbg !22
}

declare void @"__os!abort"()

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!1 = !DIFile(filename: "string.rcp", directory: "D:\\Programming\\ReComp\\bin\\std")
!2 = !{i32 2, !"CodeView", i32 1}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "index", linkageName: "__string!index", scope: !1, file: !1, line: 5, type: !5, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !10)
!5 = !DISubroutineType(types: !6)
!6 = !{!7, !8, !9, !9}
!7 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!9 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!10 = !{}
!11 = !DILocation(line: 10, scope: !4)
!12 = !DILocation(line: 11, scope: !4)
!13 = !DILocalVariable(name: "data", scope: !4, file: !1, line: 5, type: !8)
!14 = !DILocation(line: 5, scope: !4)
!15 = !DILocalVariable(name: "count", arg: 1, scope: !4, file: !1, line: 5, type: !9)
!16 = !DILocalVariable(name: "i", arg: 2, scope: !4, file: !1, line: 5, type: !9)
!17 = !DILocation(line: 6, scope: !4)
!18 = !DILocation(line: 7, scope: !4)
!19 = !DILocalVariable(name: "byte_idx", scope: !4, file: !1, line: 10, type: !20)
!20 = !DIBasicType(name: "i64", size: 64, encoding: DW_ATE_signed)
!21 = !DILocalVariable(name: "char_idx", scope: !4, file: !1, line: 11, type: !20)
!22 = !DILocation(line: 15, scope: !4)
