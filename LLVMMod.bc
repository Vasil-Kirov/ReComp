; ModuleID = 'main'
source_filename = "main"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"

%CompileInfo = type { [1024 x ptr], i32 }

@0 = private unnamed_addr constant [9 x i8] c"Test.rcp\00", align 1
@1 = private unnamed_addr constant [14 x i8] c"OtherFile.rcp\00", align 1

define void @compile(ptr %0) {
block_0:
  %1 = getelementptr inbounds %CompileInfo, ptr %0, i32 0, i32 0
  %2 = getelementptr [1024 x ptr], ptr %1, i64 0, i64 0
  store ptr @0, ptr %2, align 8
  %3 = getelementptr inbounds %CompileInfo, ptr %0, i32 0, i32 0
  %4 = getelementptr [1024 x ptr], ptr %3, i64 0, i64 1
  store ptr @1, ptr %4, align 8
  %5 = getelementptr inbounds %CompileInfo, ptr %0, i32 0, i32 1
  store i32 2, ptr %5, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %0, i64 8200, i1 false)
  ret void
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #0

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
