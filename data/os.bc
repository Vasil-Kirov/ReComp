; ModuleID = 'os'
source_filename = "os.rcp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-redhat-linux-gnu"

define void @"__os!__GlobalInitializerFunction"() {
block_0:
  ret void
}

declare i64 @write(i32, ptr, i64)

define void @"__os!print"(ptr %0, i32 %1) !dbg !4 {
block_0:
  %2 = alloca ptr, align 8, !dbg !11
  %3 = alloca i32, align 4, !dbg !11
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false), !dbg !11
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false), !dbg !11
  store ptr %0, ptr %2, align 8, !dbg !11
  call void @llvm.dbg.value(metadata ptr %2, metadata !12, metadata !DIExpression()), !dbg !11
  store i32 %1, ptr %3, align 4, !dbg !11
  call void @llvm.dbg.value(metadata ptr %3, metadata !13, metadata !DIExpression()), !dbg !11
  %4 = load ptr, ptr %2, align 8, !dbg !14
  %5 = load i32, ptr %3, align 4, !dbg !14
  %6 = zext i32 %5 to i64, !dbg !14
  %7 = call i64 @write(i32 1, ptr %4, i64 %6), !dbg !14
  ret void, !dbg !15
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!1 = !DIFile(filename: "os.rcp", directory: "/home/vasko/Programming/ReComp/std")
!2 = !{i32 2, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "print", linkageName: "__os!print", scope: !1, file: !1, line: 31, type: !5, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !10)
!5 = !DISubroutineType(types: !6)
!6 = !{null, !7, !9}
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !8, size: 64, align: 64, dwarfAddressSpace: 0)
!8 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!9 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!10 = !{}
!11 = !DILocation(line: 31, scope: !4)
!12 = !DILocalVariable(name: "data", scope: !4, file: !1, line: 31, type: !7)
!13 = !DILocalVariable(name: "count", arg: 1, scope: !4, file: !1, line: 31, type: !9)
!14 = !DILocation(line: 32, scope: !4)
!15 = !DILocation(line: 33, scope: !4)
