module main


_ :: #import mem;


new_t :: fn(T: type, this: *Allocator, fl := #file_location) -> ?*T {
    return this.alloc(size_of T, this) as ?*T;
}

main :: fn () -> i32 {
	f := ?new_t(i32, &mem.temp_alloc);
	*f = 10;


	return *f;
}


//#run main();


//	foo = .{"asd"};
//
//	malloc_alloc := libc.make_malloc_allocator(true);
//	lexer := make_lexer(&malloc_alloc);
//	add_compiler_keywords(&lexer);
//	tokens := lex_string(&lexer, "main :: fn() -> i32;", &malloc_alloc, .{"text", 1, 1});
//	for token in tokens {
//		println("token: %", token);
//	}
