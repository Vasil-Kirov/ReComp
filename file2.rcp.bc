; ModuleID = 'main'
source_filename = "file2.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

@"__main!foo" = global i64 0

define void @"__main!__GlobalInitializerFunction.1"() {
block_0:
  %0 = call i64 @"__main!give_one"()
  store i64 %0, ptr @"__main!foo", align 8
  ret void
}

define void @puts(ptr %0) !dbg !4 {
block_0:
  ret i64 1, !dbg !8
}

define ptr @malloc(i64 %0) !dbg !9 {
block_0:
  ret i32 2, !dbg !13
}

declare ptr @"__main!allocator_alloc"(i64, ptr)

declare i32 @"__main!main"()

declare i64 @"__main!give_one"()

declare i32 @"__main!give_two"()

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!1 = !DIFile(filename: "file2.rcp", directory: "E:\\C_Projects\\ReComp")
!2 = !{i32 2, !"CodeView", i32 1}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "give_one", linkageName: "__main!give_one", scope: !1, file: !1, line: 9, type: !5, spFlags: DISPFlagDefinition, unit: !0)
!5 = !DISubroutineType(types: !6)
!6 = !{!7}
!7 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!8 = !DILocation(line: 10, scope: !4)
!9 = distinct !DISubprogram(name: "give_two", linkageName: "__main!give_two", scope: !1, file: !1, line: 15, type: !10, spFlags: DISPFlagDefinition, unit: !0)
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!13 = !DILocation(line: 16, scope: !9)
