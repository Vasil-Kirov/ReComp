
get_one :: fn(x: i32) -> i32 {
	return x + 1;
}

main :: fn(arg: i32, arg2: i32) -> i32 {
	y := @i32 4;

	for i: i32 = 0; i <= 10; i = i + 1 {
		y = y + get_one(1);
	}

	return y;

	// if y == 10 {
	// 	return 10;
	// } else if y == 3 {
	// 	return 12;
	// } else {
	// 	return 13;
	// }

	// return 20;
}



// GENERICS SYNTAX
// struct stack!T {
// 	T items[];
//  int top;
// }
// 
// push!T :: fn(Stack: *stack!T, item: T) -> T {
// 	return stack.items[stack.top++] = item;
// }

// 1. 2 * 3
// 2. 4 / 1
// 3. (2) % 0
// 4. 10 + (1) - (3)

