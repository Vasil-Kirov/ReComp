; ModuleID = 'main'
source_filename = "file1.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%"__main!foo" = type { i64 }

@"__main!my_c" = global %"__main!foo" zeroinitializer

define void @"__main!__GlobalInitializerFunction"() {
block_0:
  %0 = alloca %"__main!foo", align 8
  %1 = getelementptr inbounds %"__main!foo", ptr %0, i32 0, i32 0
  store i64 10, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 @"__main!my_c", ptr align 8 %0, i64 8, i1 false)
  ret void
}

define i32 @"__main!main"() !dbg !4 {
block_0:
  ret i32 0, !dbg !8
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #0

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!1 = !DIFile(filename: "file1.rcp", directory: "D:\\Programming\\ReComp")
!2 = !{i32 2, !"CodeView", i32 1}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "main", linkageName: "__main!main", scope: !1, file: !1, line: 13, type: !5, spFlags: DISPFlagDefinition, unit: !0)
!5 = !DISubroutineType(types: !6)
!6 = !{!7}
!7 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!8 = !DILocation(line: 14, scope: !4)
