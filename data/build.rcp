build

#import compile as c
#import io
#import init
#import os
#import array as arr
#import mem

puts :: fn #foreign(str: *u8);

compile :: fn() -> c.CompileInfo {
    ga := mem.create_generic_allocator();

    out := c.CompileInfo {
        files = []string { "../file1.rcp", "../file2.rcp" },
        opt = 0,
        flags = @u32 c.CompileFlag.SanAddress,
    };

   for f in out.files {
       io.println("Compiling file: %", f);
   }

    return out;
}

after_link :: fn() {
    for c in "Done" {
        io.println("%c", c);
    }
    return;
}

