; ModuleID = 'main'
source_filename = "file1.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

define void @"__main!__GlobalInitializerFunction"() {
block_0:
  ret void
}

define i32 @"__main!main"() !dbg !4 {
block_0:
  %0 = alloca ptr, align 8, !dbg !9
  call void @llvm.dbg.declare(metadata ptr %0, metadata !10, metadata !DIExpression()), !dbg !9
  store ptr null, ptr %0, align 8, !dbg !9
  %1 = alloca i1, align 1, !dbg !13
  call void @llvm.dbg.declare(metadata ptr %1, metadata !14, metadata !DIExpression()), !dbg !13
  store i1 true, ptr %1, align 1, !dbg !13
  %2 = load i1, ptr %1, align 1, !dbg !16
  br i1 %2, label %block_1, label %block_2, !dbg !16

block_1:                                          ; preds = %block_0
  %3 = load ptr, ptr %0, align 8, !dbg !17
  %4 = getelementptr i8, ptr %3, i64 1, !dbg !17
  store ptr %4, ptr %0, align 8, !dbg !17
  br label %block_3, !dbg !17

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !17

block_3:                                          ; preds = %block_2, %block_1
  %5 = load ptr, ptr %0, align 8, !dbg !18
  %6 = getelementptr i8, ptr %5, i64 1, !dbg !18
  %7 = ptrtoint ptr %6 to i64, !dbg !18
  %8 = trunc i64 %7 to i32, !dbg !18
  ret i32 %8, !dbg !18
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!1 = !DIFile(filename: "file1.rcp", directory: "D:\\Programming\\ReComp")
!2 = !{i32 2, !"CodeView", i32 1}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "main", linkageName: "__main!main", scope: !1, file: !1, line: 8, type: !5, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !8)
!5 = !DISubroutineType(types: !6)
!6 = !{!7}
!7 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!8 = !{}
!9 = !DILocation(line: 9, scope: !4)
!10 = !DILocalVariable(name: "x", scope: !4, file: !1, line: 9, type: !11)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!12 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!13 = !DILocation(line: 10, scope: !4)
!14 = !DILocalVariable(name: "my_b", scope: !4, file: !1, line: 10, type: !15)
!15 = !DIBasicType(name: "bool", size: 32, encoding: DW_ATE_boolean)
!16 = !DILocation(line: 11, scope: !4)
!17 = !DILocation(line: 12, scope: !4)
!18 = !DILocation(line: 15, scope: !4)
