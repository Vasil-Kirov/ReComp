; ModuleID = 'main'
source_filename = "lambda.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

define void @"__main!__GlobalInitializerFunction.0"() {
block_0:
  ret void
}

define i32 @"__main!my_32_fn"(i32 %0) !dbg !4 {
block_0:
  %1 = alloca i32, align 4, !dbg !9
  call void @llvm.memset.p0.i32(ptr align 4 %1, i8 0, i32 4, i1 false), !dbg !9
  store i32 %0, ptr %1, align 4, !dbg !9
  call void @llvm.dbg.value(metadata ptr %1, metadata !10, metadata !DIExpression()), !dbg !9
  ret i32 32, !dbg !11
}

define i32 @"__main!my_16_fn"(i32 %0) !dbg !12 {
block_0:
  %1 = alloca i32, align 4, !dbg !13
  call void @llvm.memset.p0.i32(ptr align 4 %1, i8 0, i32 4, i1 false), !dbg !13
  store i32 %0, ptr %1, align 4, !dbg !13
  call void @llvm.dbg.value(metadata ptr %1, metadata !14, metadata !DIExpression()), !dbg !13
  ret i32 16, !dbg !15
}

define i32 @"__main!call_lambda"(ptr %0) !dbg !16 {
block_0:
  %1 = alloca ptr, align 8, !dbg !20
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false), !dbg !20
  store ptr %0, ptr %1, align 8, !dbg !20
  call void @llvm.dbg.value(metadata ptr %1, metadata !21, metadata !DIExpression()), !dbg !20
  %2 = load ptr, ptr %1, align 8, !dbg !22
  %3 = call i32 %2(i32 16), !dbg !22
  ret i32 %3, !dbg !22
}

define i32 @"__main!main"() !dbg !23 {
block_0:
  %0 = alloca ptr, align 8, !dbg !26
  %1 = alloca ptr, align 8, !dbg !27
  call void @llvm.memset.p0.i32(ptr align 8 %0, i8 0, i32 8, i1 false), !dbg !26
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false), !dbg !27
  store ptr @__lambda_lambda.rcp17, ptr %0, align 8, !dbg !26
  call void @llvm.dbg.declare(metadata ptr %0, metadata !28, metadata !DIExpression()), !dbg !26
  store ptr @"__main!my_32_fn", ptr %1, align 8, !dbg !27
  call void @llvm.dbg.declare(metadata ptr %1, metadata !30, metadata !DIExpression()), !dbg !27
  store ptr @"__main!my_16_fn", ptr %1, align 8, !dbg !31
  %2 = load ptr, ptr %0, align 8, !dbg !32
  %3 = call i32 %2(), !dbg !32
  %4 = load ptr, ptr %1, align 8, !dbg !32
  %5 = call i32 @"__main!call_lambda"(ptr %4), !dbg !32
  %6 = sub i32 %3, %5, !dbg !32
  %7 = call i32 @"__main!call_lambda"(ptr @__lambda_lambda.rcp24), !dbg !32
  %8 = sub i32 %6, %7, !dbg !32
  ret i32 %8, !dbg !32
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

define private i32 @__lambda_lambda.rcp17() !dbg !33 {
block_0:
  ret i32 32, !dbg !34
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

define private i32 @__lambda_lambda.rcp24(i32 %0) !dbg !35 {
block_0:
  %1 = alloca i32, align 4, !dbg !36
  call void @llvm.memset.p0.i32(ptr align 4 %1, i8 0, i32 4, i1 false), !dbg !36
  store i32 %0, ptr %1, align 4, !dbg !36
  call void @llvm.dbg.value(metadata ptr %1, metadata !37, metadata !DIExpression()), !dbg !36
  %2 = load i32, ptr %1, align 4, !dbg !38
  ret i32 %2, !dbg !38
}

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!1 = !DIFile(filename: "lambda.rcp", directory: "E:\\C_Projects\\ReComp\\tests\\lambda")
!2 = !{i32 2, !"CodeView", i32 1}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "my_32_fn", linkageName: "__main!my_32_fn", scope: !1, file: !1, line: 3, type: !5, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !8)
!5 = !DISubroutineType(types: !6)
!6 = !{!7, !7}
!7 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!8 = !{}
!9 = !DILocation(line: 3, scope: !4)
!10 = !DILocalVariable(name: "x", scope: !4, file: !1, line: 3, type: !7)
!11 = !DILocation(line: 4, scope: !4)
!12 = distinct !DISubprogram(name: "my_16_fn", linkageName: "__main!my_16_fn", scope: !1, file: !1, line: 7, type: !5, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !8)
!13 = !DILocation(line: 7, scope: !12)
!14 = !DILocalVariable(name: "x", scope: !12, file: !1, line: 7, type: !7)
!15 = !DILocation(line: 8, scope: !12)
!16 = distinct !DISubprogram(name: "call_lambda", linkageName: "__main!call_lambda", scope: !1, file: !1, line: 11, type: !17, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !8)
!17 = !DISubroutineType(types: !18)
!18 = !{!7, !19}
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(i32) -> i32", baseType: !5, size: 64, align: 64, dwarfAddressSpace: 0)
!20 = !DILocation(line: 11, scope: !16)
!21 = !DILocalVariable(name: "f", scope: !16, file: !1, line: 11, type: !19)
!22 = !DILocation(line: 13, scope: !16)
!23 = distinct !DISubprogram(name: "main", linkageName: "__main!main", scope: !1, file: !1, line: 16, type: !24, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !8)
!24 = !DISubroutineType(types: !25)
!25 = !{!7}
!26 = !DILocation(line: 17, scope: !23)
!27 = !DILocation(line: 21, scope: !23)
!28 = !DILocalVariable(name: "my_lambda", scope: !23, file: !1, line: 17, type: !29)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn() -> i32", baseType: !24, size: 64, align: 64, dwarfAddressSpace: 0)
!30 = !DILocalVariable(name: "fn_ptr", scope: !23, file: !1, line: 21, type: !19)
!31 = !DILocation(line: 22, scope: !23)
!32 = !DILocation(line: 24, scope: !23)
!33 = distinct !DISubprogram(name: "__lambda_lambda.rcp17", linkageName: "__main!__lambda_lambda.rcp17", scope: !1, file: !1, line: 17, type: !24, spFlags: DISPFlagDefinition, unit: !0)
!34 = !DILocation(line: 18, scope: !33)
!35 = distinct !DISubprogram(name: "__lambda_lambda.rcp24", linkageName: "__main!__lambda_lambda.rcp24", scope: !1, file: !1, line: 24, type: !5, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !8)
!36 = !DILocation(line: 24, scope: !35)
!37 = !DILocalVariable(name: "x", scope: !35, file: !1, line: 24, type: !7)
!38 = !DILocation(line: 25, scope: !35)
