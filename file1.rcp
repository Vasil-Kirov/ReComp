module main

//#import "compiler/lexer.rcp" as *;
//#import "libc.rcp";

#import base as *
#import intrin as *
#import io as *
#import mem

//foo: []string;

print_file_info :: fn(fi := #file_location) {
	println("%", fi);
}

main :: fn() -> i32 {

	x := 4;

	for i := 0; i < 10; i += 1 {
		match i {
			1, 2, 3, 4, 5, 6:
				println("Number: %", i);
			_:
				println("NO!");

		};
	}

    return 0;
}

#run main();


//	foo = .{"asd"};
//
//	malloc_alloc := libc.make_malloc_allocator(true);
//	lexer := make_lexer(&malloc_alloc);
//	add_compiler_keywords(&lexer);
//	tokens := lex_string(&lexer, "main :: fn() -> i32;", &malloc_alloc, .{"text", 1, 1});
//	for token in tokens {
//		println("token: %", token);
//	}
