; ModuleID = 'init'
source_filename = "init.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

define void @"__init!__GlobalInitializerFunction"() {
block_0:
  ret void
}

declare void @"__init!global_initializers"()

define i32 @main() !dbg !10 {
block_0:
  %0 = alloca i32, align 4, !dbg !15
  call void @llvm.memset.p0.i32(ptr align 4 %0, i8 0, i32 4, i1 false), !dbg !15
  call void @"__init!global_initializers"(), !dbg !16
  %1 = call i32 @"__main!main"(), !dbg !15
  store i32 %1, ptr %0, align 4, !dbg !15
  call void @llvm.dbg.declare(metadata ptr %0, metadata !17, metadata !DIExpression()), !dbg !15
  %2 = load i32, ptr %0, align 4, !dbg !18
  ret i32 %2, !dbg !18
}

declare i32 @"__main!main"()

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!8, !9}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false)
!1 = !DIFile(filename: "init.rcp", directory: "D:\\Programming\\ReComp\\bin\\std")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__main!MyEnum", scope: !1, file: !1, size: 32, align: 32, elements: !4)
!4 = !{!5, !6, !7}
!5 = !DIEnumerator(name: "SOME_NAME", value: 1)
!6 = !DIEnumerator(name: "OTHER_NAME", value: 2)
!7 = !DIEnumerator(name: "FINAL_NAME", value: 3)
!8 = !{i32 2, !"CodeView", i32 1}
!9 = !{i32 2, !"Debug Info Version", i32 3}
!10 = distinct !DISubprogram(name: "main", linkageName: "main", scope: !1, file: !1, line: 12, type: !11, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!11 = !DISubroutineType(types: !12)
!12 = !{!13}
!13 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!14 = !{}
!15 = !DILocation(line: 14, scope: !10)
!16 = !DILocation(line: 13, scope: !10)
!17 = !DILocalVariable(name: "res", scope: !10, file: !1, line: 14, type: !13)
!18 = !DILocation(line: 16, scope: !10)
