; ModuleID = 'main'
source_filename = "main"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"

%CompileInfo = type { [1024 x ptr], i32 }

declare ptr @memset(ptr, i32, i64)

declare ptr @malloc(i64)

declare ptr @fgets(ptr, i32, i64)

define void @compile(ptr %0) {
block_0:
  %1 = alloca i64, align 8
  store i64 0, ptr %1, align 8
  br label %block_1

block_1:                                          ; preds = %block_3, %block_0
  %2 = load i64, ptr %1, align 8
  %3 = icmp slt i64 %2, 5
  br i1 %3, label %block_2, label %block_4

block_2:                                          ; preds = %block_1
  %4 = call ptr @malloc(i64 32)
  %5 = alloca ptr, align 8
  store ptr %4, ptr %5, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @memset(ptr %6, i32 0, i64 32)
  %8 = getelementptr inbounds %CompileInfo, ptr %0, i32 0, i32 0
  %9 = load i64, ptr %1, align 8
  %10 = getelementptr [1024 x ptr], ptr %8, i64 0, i64 %9
  %11 = load ptr, ptr %5, align 8
  %12 = call ptr @fgets(ptr %11, i32 32, i64 0)
  store ptr %12, ptr %10, align 8
  br label %block_3

block_3:                                          ; preds = %block_2
  %13 = load i64, ptr %1, align 8
  %14 = add i64 %13, 1
  store i64 %14, ptr %1, align 8
  %15 = load i64, ptr %1, align 8
  br label %block_1

block_4:                                          ; preds = %block_1
  %16 = getelementptr inbounds %CompileInfo, ptr %0, i32 0, i32 1
  store i32 5, ptr %16, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %0, i64 8200, i1 false)
  ret void
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #0

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
