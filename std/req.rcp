nostdlib

memcpy :: fn #foreign(dst: *, src: *, size: int) -> * {
	d: *u8 = dst;
	s: *u8 = src;
	for i in size {
		d[i] = s[i];
	}

	return dst;
}

memset :: fn #foreign(dst: *, val: i32, num: int) -> * {
	d: *u8 = dst;
	for i in num {
		d[i] = @u8 val;
	}

	return dst;
}

_fltused :: fn #foreign() {}

#if Windows {
    __chkstk :: fn #foreign() {}
}


