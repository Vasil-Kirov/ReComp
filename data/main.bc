; ModuleID = 'main'
source_filename = "file1.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

define void @"__main!__GlobalInitializerFunction"() {
block_0:
  ret void
}

define i32 @"__main!main"() !dbg !10 {
block_0:
  call void @llvm.dbg.declare(metadata i32 2, metadata !15, metadata !DIExpression()), !dbg !16
  br i1 false, label %block_1, label %block_2, !dbg !17

block_1:                                          ; preds = %block_0
  ret i32 0, !dbg !18

block_2:                                          ; preds = %block_0
  br i1 true, label %block_4, label %block_5, !dbg !19

block_4:                                          ; preds = %block_2
  ret i32 1, !dbg !20

block_5:                                          ; preds = %block_2
  ret i32 2, !dbg !21

block_6:                                          ; No predecessors!
  br label %block_3, !dbg !21

block_3:                                          ; preds = %block_6
  ret i32 5, !dbg !22
}

declare void @"__string!format_uint"(ptr, i64, ptr)

declare void @"__string!print_int"(i32)

declare i32 @"__string!get_next"(ptr)

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!8, !9}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false)
!1 = !DIFile(filename: "file1.rcp", directory: "D:\\Programming\\ReComp")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__main!MyEnum", scope: !1, file: !1, size: 32, align: 32, elements: !4)
!4 = !{!5, !6, !7}
!5 = !DIEnumerator(name: "SOME_NAME", value: 1)
!6 = !DIEnumerator(name: "OTHER_NAME", value: 2)
!7 = !DIEnumerator(name: "FINAL_NAME", value: 3)
!8 = !{i32 2, !"CodeView", i32 1}
!9 = !{i32 2, !"Debug Info Version", i32 3}
!10 = distinct !DISubprogram(name: "main", linkageName: "__main!main", scope: !1, file: !1, line: 13, type: !11, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!11 = !DISubroutineType(types: !12)
!12 = !{!13}
!13 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!14 = !{}
!15 = !DILocalVariable(name: "x", scope: !10, file: !1, line: 14, type: !3)
!16 = !DILocation(line: 14, scope: !10)
!17 = !DILocation(line: 15, scope: !10)
!18 = !DILocation(line: 16, scope: !10)
!19 = !DILocation(line: 17, scope: !10)
!20 = !DILocation(line: 18, scope: !10)
!21 = !DILocation(line: 20, scope: !10)
!22 = !DILocation(line: 22, scope: !10)
